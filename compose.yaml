version: '3.8'

services:
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data"
    ports:
      - "8000:8000"
    volumes:
      - "./data:/home/dynamodblocal/data"

  dynamodb-init:
    image: amazon/aws-cli:latest
    container_name: dynamodb-init
    depends_on:
      - dynamodb-local
    environment:
      AWS_ACCESS_KEY_ID: $${AWS_ACCESS_KEY_ID:dummy}
      AWS_SECRET_ACCESS_KEY: $${AWS_SECRET_ACCESS_KEY:dummy}
    command: >
      sh -c '
      until aws dynamodb list-tables --endpoint-url http://dynamodb-local:8000 --region eu-central-1 > /dev/null 2>&1; do
        echo "Waiting for DynamoDB Local...";
        sleep 2;
      done;
      echo "DynamoDB Local is ready, creating tables...";
      aws dynamodb create-table \
        --table-name todos \
        --attribute-definitions AttributeName=id,AttributeType=S \
        --key-schema AttributeName=id,KeyType=HASH \
        --billing-mode PAY_PER_REQUEST \
        --endpoint-url http://dynamodb-local:8000 \
        --region eu-central-1;
      aws dynamodb create-table \
        --table-name users \
        --attribute-definitions AttributeName=id,AttributeType=S \
        --key-schema AttributeName=id,KeyType=HASH \
        --billing-mode PAY_PER_REQUEST \
        --endpoint-url http://dynamodb-local:8000 \
        --region eu-central-1;
      echo "Tables created successfully";
      '

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"  # LocalStack main endpoint
      - "4510-4559:4510-4559"  # External service port range
    environment:
      - SERVICES=lambda,dynamodb,apigateway,iam,sts,logs
      - DEFAULT_REGION=eu-central-1
      - DEBUG=1
      - LAMBDA_EXECUTOR=docker
      - LAMBDA_REMOVE_CONTAINERS=true
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp}/localstack
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - "./localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./target:/opt/code/localstack/target:ro"  # Mount built JAR for Lambda
    depends_on:
      - dynamodb-local

  backend:
    build: .
    container_name: taskflow-backend
    depends_on:
      - dynamodb-local
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - AWS_ACCESS_KEY_ID=$${AWS_ACCESS_KEY_ID:dummy}
      - AWS_SECRET_ACCESS_KEY=$${AWS_SECRET_ACCESS_KEY:dummy}
    command: [ "java", "-jar", "/app/app.jar" ]